apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
  namespace: istio-system
spec:
  observability:
    metrics:
      enableMetrics: true
  deploymentUpdateStrategy: {}
  config:
    extensions:
      bearertokenauth:
        filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    exporters:
      debug:
        verbosity: basic
      otlp/tempo:
        endpoint: tempo-default-gateway.tempo-observability.svc.cluster.local:8090
        tls:
          insecure: false
          insecure_skip_verify: true
          ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        auth:
          authenticator: bearertokenauth
        headers:
          X-Scope-OrgID: dev
      prometheus:
        endpoint: 0.0.0.0:8889
        add_metric_suffixes: false
        resource_to_telemetry_conversion:
          enabled: true

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: '0.0.0.0:4317'
          http:
            endpoint: '0.0.0.0:4318'

    processors:
      k8sattributes: {}

    connectors:
      spanmetrics:
        metrics_flush_interval: 15s

    service:
      extensions:
        - bearertokenauth
      pipelines:
        traces:
          exporters:
            - debug
            - spanmetrics
            - otlp/tempo
          receivers:
            - otlp
        logs:
          exporters:
            - debug
          receivers:
            - otlp
        metrics:
          receivers:
            - spanmetrics
          exporters:
            - debug
            - prometheus
      telemetry:
        logs:
          level: DEBUG
        metrics:
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: '0.0.0.0'
                    port: 8888
  mode: deployment
  resources: {}
  podDnsConfig: {}
  managementState: managed
  upgradeStrategy: automatic
  ingress:
    route: {}
  daemonSetUpdateStrategy: {}
  targetAllocator:
    allocationStrategy: consistent-hashing
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      scrapeInterval: 30s
    resources: {}
  replicas: 1
  ipFamilyPolicy: SingleStack
  configVersions: 3